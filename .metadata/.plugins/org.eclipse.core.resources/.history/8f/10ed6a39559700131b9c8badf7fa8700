#include "WPILib.h"
#include "Hardware.h"

/**
 * This is a demo program showing the use of the RobotBase class.
 * The SimpleRobot class is the base of a robot application that will automatically call your
 * Autonomous and OperatorControl methods at the right time as controlled by the switches on
 * the driver station or the field controls.
 */ 
const double RSPEED=0.25;
        const double SSPEED=0.25;
class RobotDemo : public SimpleRobot
{

public:
	RobotDemo()
	{
	//  Hardware::Init();
	 // Hardware::RobotLights->setUnderGlow(false,false,true);
	}

	/**
	 * Drive left & right motors for 2 seconds then stop
	 */
	void Autonomous()
	{
	  Hardware::Collector->AutonomousCollect(0.2,1,0.8);
          Hardware::Collector->AutonomousCollect(0,0,0);
          Hardware::DriveSys->DriveForward(0.3,0.75);
          Hardware::DriveSys->DriveForward(0,1);
          Hardware::Shooter->AutonomousShoot(this);

	}

	/**
	 * Runs the motors with arcade steering. 
	 */
	
	
	void OperatorControl()
	{
	        uint32_t port1=5,port2=6;

	  Encoder* enc = new Encoder(port1, port2, true, Encoder::k4X);//Change Port numbers
	  enc->Reset();
	  enc->Start();
		while (IsOperatorControl() && IsEnabled())
		{
		   // Hardware::DriveSys->Drive();
		   //   Hardware::Shooter->Shoot();
		   //   Hardware::Collector->Collect();
		   //   DriverStationLCD::GetInstance()->UpdateLCD();
		          DriverStationLCD::GetInstance()->PrintfLine(DriverStationLCD::kUser_Line1,"Encoder: %i",enc->Get());

			Wait(0.005);				// wait for a motor update time
		}
	}
	
	/**
	 * Runs during test mode
	 */
	void Test() {

	}
};

START_ROBOT_CLASS(RobotDemo);

